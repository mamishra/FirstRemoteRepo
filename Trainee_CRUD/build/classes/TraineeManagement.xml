<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd

http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


 		<context:component-scan base-package="com.cg.trainee.services, com.cg.trainee.daos" />
 		 <context:property-placeholder location="classpath:oracle.properties" /><!-- Change property file name -->
 		 
	  	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		  <property name="driverClassName" value="${db.driver}" />
		  <property name="url" value="${db.url}" />
		  <property name="username" value="${db.user}" />
		  <property name="password" value="${db.password}" />
  		</bean>



	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
          <property name="dataSource" ref="dataSource"/>
          <property name="packagesToScan" value="com.cg.trainee.dtos"/> <!-- Change here -->
          <property name="persistenceProviderClass" value="org.hibernate.jpa.HibernatePersistenceProvider"/>
          <property name="jpaPropertyMap">
              <map>
                  <entry key="hibernate.dialect" value="org.hibernate.dialect.Oracle10gDialect"/>
                  <entry key="hibernate.hbm2ddl.auto" value="update"/><!-- Change value create to update -->
              </map>
          </property>
      </bean>


	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<!-- This is required to handle transactions via Annotations like @Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	

	

</beans>